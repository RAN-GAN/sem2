1. LED with ARM7 (Blinking of led)
#include <lpc214x.h>

#define LED_PIN (1 << 10)  // P0.10

void delay(unsigned int count) {
    for (unsigned int i = 0; i < count; i++);
}

int main(void) {
    // Configure P0.10 as GPIO and Output
    PINSEL0 &= ~(3 << 20);  // Clear bits 20 and 21 to select GPIO
    IODIR0 |= LED_PIN;      // Set P0.10 as output

    while (1) {
        IOSET0 = LED_PIN;  // Turn LED ON
        delay(500000);     // Delay

        IOCLR0 = LED_PIN;  // Turn LED OFF
        delay(500000);     // Delay
    }
} 
END
2. Led Matrix
#include <lpc214x.h>

#define ROW_PORT IO1PIN   // Row control (connected to P1.16 - P1.23)
#define COL_PORT IO0PIN   // Column control (connected to P0.0 - P0.7)

void delay(unsigned int time) {
    unsigned int i, j;
    for (i = 0; i < time; i++)
        for (j = 0; j < 1000; j++);
}

void display_pattern(unsigned char pattern[8]) {
    unsigned char row;
    for (row = 0; row < 8; row++) {
        ROW_PORT = (1 << (row + 16));  // Set row HIGH (P1.16 - P1.23)
        COL_PORT = ~pattern[row];      // Set column LOW to turn ON LEDs
        delay(10);                     // Delay for persistence of vision
        COL_PORT = 0xFF;               // Turn OFF all columns
    }
}

int main() {
    // Pattern for the number "2" on an 8Å¨8 common cathode LED matrix
unsigned char pattern[8] = {
    0b01111110, // Row 0:  ****** 
    0b11000011, // Row 1: **    **
    0b00000011, // Row 2:       **
    0b00000110, // Row 3:      ** 
    0b00001100, // Row 4:     **  
    0b00011000, // Row 5:    **   
    0b00110000, // Row 6:   **    
    0b11111111  // Row 7: ********
};
    // Configure GPIO Pins
    PINSEL0 = 0x00000000;  // Set P0.0 to P0.7 as GPIO
    PINSEL1 = 0x00000000;  // Set P1.16 to P1.23 as GPIO
    IO0DIR = 0xFF;         // Set P0.0 to P0.7 as output (columns)
    IO1DIR |= (0xFF << 16); // Set P1.16 to P1.23 as output (rows)

    // Infinite loop to continuously display the pattern
    while (1) {
        display_pattern(pattern);
    }

    return 0;
}
END
3. LED (display a string)
#include<lpc214x.h>
#define bit(x) (1<<x)
#define delay for(i=1;i<1000;i++);
unsigned int i;
void lcd_int();
void dat(unsigned char);
void cmd(unsigned char);
void string(unsigned char*);
void main()
{
	IO0DIR|=0XFFF;
	lcd_int();
	cmd(0x8a);
	string("23EUCI010");
	while(1)
	{
		cmd(0x18);
		delay;
	}
}void lcd_int()
{
	cmd(0x30);
	cmd(0x0c);
	cmd(0x06);
	cmd(0x01);
	cmd(0x80);
}
void cmd(unsigned char a)
{
	IO0PIN&=0x00;
	IO0PIN|=(a<<0);
	IO0CLR|=bit(8);
	IO0CLR|=bit(9);
	IO0SET|=bit(10);
	delay;
	IO0CLR|=bit(10);
}
void dat(unsigned char b)
{
	IO0PIN&=0x00;
	IO0PIN|=(b<<0);
	IO0SET|=bit(8);
	IO0CLR|=bit(9);
	IO0SET|=bit(10);
	delay;
	IO0CLR|=bit(10);
}
void string(unsigned char *p)
{
	while(*p!='\0')
	{
		dat(*p++);
	}
}
4. 7 segment display
#include <lpc214x.h>

void delay(int k) {
    for (int i = 0; i < k; i++) {
        for (int j = 0; j < 1000; j++) {
            // Empty loop to create delay
        }
    }
}

void displayDigit(int digit) {
    unsigned char segmentCodes[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
    
    if (digit >= 0 && digit <= 9) {
        IO0SET = segmentCodes[digit]; // Set the corresponding segment code
    }
}

void clearDisplay(int digit) {
    unsigned char segmentCodes[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
    
    if (digit >= 0 && digit <= 9) {
        IO0CLR = segmentCodes[digit]; // Clear the corresponding segment code
    }
}

int main() {
    IO0DIR |= 0xFF; // Set lower 8 bits of IO0DIR as output (for 7-segment display)
    
    while (1) {
        for (int i = 0; i <= 9; i++) {
            displayDigit(i); // Display the current digit
            delay(1000); // Delay to allow the display to be visible
            clearDisplay(i); // Clear the digit
        }
    }
    
    return 0;
}